name: Build, SCP, and Deploy Docker Image

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      IMAGE_TAG: ${{ github.sha }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      # Step 1: Build the Docker image with a unique tag
      - name: Build Docker Image
        run: docker build -t musiclab-api:${{ env.IMAGE_TAG }} -f Dockerfile .

      # Step 2: Save the Docker image to a tar archive
      - name: Save Docker Image to Tarball
        run: docker save -o musiclab-api.tar musiclab-api:${{ env.IMAGE_TAG }}

      # Step 2.5: Fix permissions on the tarball
      - name: Fix Tarball Permissions
        run: chmod 644 musiclab-api.tar

      # Step 3: Transfer Image to Remote Server via SCP
      - name: Transfer Image to Remote Server via SCP
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_KEY }}
          source: "musiclab-api.tar"
          target: "/home/${{ secrets.SERVER_USERNAME }}"

      # Step 3.5: Verify File Transfer
      - name: Verify File Transfer
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_KEY }}
          script: |
            echo "Listing files in home directory:"
            ls -al /home/${{ secrets.SERVER_USERNAME }}

      # Step 4: Deploy to Remote Server via SSH
      - name: Deploy to Remote Server via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_KEY }}
          script: |
            echo "Loading new image from tarball..."
            docker load -i /home/${{ secrets.SERVER_USERNAME }}/musiclab-api.tar

            echo "Stopping and removing existing container..."
            docker stop musiclab-api || true
            docker rm musiclab-api || true

            echo "Running new container with updated image..."
            docker run -d --name musiclab-api \
              -p 127.0.0.1:5106:5106\
              -v /home/deploy/musiclabAPI/data:/data \
              musiclab-api:${{ github.sha }}

            echo "Cleaning up tarball..."
            rm /home/${{ secrets.SERVER_USERNAME }}/musiclab-api.tar

            echo "--- Deployment Complete ---"
            docker ps -a
